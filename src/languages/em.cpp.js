var lang = {
    name: "cpp",
    friendlyName: "C++",
    keywords: [
        "alignas",
        "alignof",
        "and",
        "and_eq",
        "asm",
        "atomic_cancel",
        "atomic_commit",
        "atomic_noexcept",
        "auto",
        "bitand",
        "bitor",
        "bool",
        "break",
        "case",
        "catch",
        "char",
        "char16_t",
        "char32_t",
        "class",
        "compl",
        "concept",
        "const",
        "constexpr",
        "const_cast",
        "continue",
        "co_await",
        "co_return",
        "co_yield",
        "decltype",
        "default",
        "delete",
        "do",
        "double",
        "dynamic_cast",
        "else",
        "enum",
        "explicit",
        "export",
        "extern",
        "float",
        "for",
        "friend",
        "goto",
        "if",
        "import",
        "inline",
        "int",
        "long",
        "module",
        "mutable",
        "namespace",
        "new",
        "noexcept",
        "not",
        "not_eq",
        "nullptr",
        "operator",
        "or",
        "or_eq",
        "private",
        "protected",
        "public",
        "register",
        "reinterpret_cast",
        "requires",
        "return",
        "short",
        "signed",
        "sizeof",
        "static",
        "static_assert",
        "static_cast",
        "struct",
        "switch",
        "synchronized",
        "template",
        "this",
        "thread_local",
        "throw",
        "try",
        "typedef",
        "typeid",
        "typename",
        "union",
        "unsigned",
        "virtual",
        "void",
        "volatile",
        "wchar_t",
        "while",
        "xor",
        "xor_eq"     
    ],
    directives: [
        "#define",
        "#undef",
        "#ifdef",
        "#ifndef",
        "#if",
        "#elif",
        "#else",
        "#endif",
        "#line",
        "#error",
        "#warning",
        "#error",
        "#warning",
        "#region",
        "#endregion"
    ],
    directives_s: [
        "#include",
        'using'
    ],
    dcv_symbol: "#",
    multiLineComment: [
        {init: "/*", term: "*/", esc: "*"}
    ],
    stringLiterals: ["\"", "'"],
    values: [
        "false",
        "true"
    ],
    comment: "//",
    multiLineString: [
        {init: "R\"(", term: ")\"", esc: ""}
    ]
};
if (typeof window !== "undefined") { null==window._em_la_&&(window._em_la_={}),lang.name in Object.keys(window._em_la_)||(window._em_la_[lang.name]=lang); } else { module.exports = lang }